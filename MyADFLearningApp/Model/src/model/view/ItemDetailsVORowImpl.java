package model.view;

import model.entity.RegistrationLinesEOImpl;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 20 17:38:12 IST 2009
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ItemDetailsVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        LineId {
            public Object get(ItemDetailsVORowImpl obj) {
                return obj.getLineId();
            }

            public void put(ItemDetailsVORowImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        ProductCode {
            public Object get(ItemDetailsVORowImpl obj) {
                return obj.getProductCode();
            }

            public void put(ItemDetailsVORowImpl obj, Object value) {
                obj.setProductCode((String)value);
            }
        }
        ,
        Qty {
            public Object get(ItemDetailsVORowImpl obj) {
                return obj.getQty();
            }

            public void put(ItemDetailsVORowImpl obj, Object value) {
                obj.setQty((Number)value);
            }
        }
        ,
        RegistrationId {
            public Object get(ItemDetailsVORowImpl obj) {
                return obj.getRegistrationId();
            }

            public void put(ItemDetailsVORowImpl obj, Object value) {
                obj.setRegistrationId((Number)value);
            }
        }
        ,
        Descr {
            public Object get(ItemDetailsVORowImpl obj) {
                return obj.getDescr();
            }

            public void put(ItemDetailsVORowImpl obj, Object value) {
                obj.setDescr((String)value);
            }
        }
        ,
        Uom {
            public Object get(ItemDetailsVORowImpl obj) {
                return obj.getUom();
            }

            public void put(ItemDetailsVORowImpl obj, Object value) {
                obj.setUom((String)value);
            }
        }
        ,
        UnitPrice {
            public Object get(ItemDetailsVORowImpl obj) {
                return obj.getUnitPrice();
            }

            public void put(ItemDetailsVORowImpl obj, Object value) {
                obj.setUnitPrice((Number)value);
            }
        }
        ,
        Currency {
            public Object get(ItemDetailsVORowImpl obj) {
                return obj.getCurrency();
            }

            public void put(ItemDetailsVORowImpl obj, Object value) {
                obj.setCurrency((String)value);
            }
        }
        ,
        Manufacturer {
            public Object get(ItemDetailsVORowImpl obj) {
                return obj.getManufacturer();
            }

            public void put(ItemDetailsVORowImpl obj, Object value) {
                obj.setManufacturer((String)value);
            }
        }
        ,
        RegNum {
            public Object get(ItemDetailsVORowImpl obj) {
                return obj.getRegNum();
            }

            public void put(ItemDetailsVORowImpl obj, Object value) {
                obj.setRegNum((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ItemDetailsVORowImpl object);

        public abstract void put(ItemDetailsVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int PRODUCTCODE = AttributesEnum.ProductCode.index();
    public static final int QTY = AttributesEnum.Qty.index();
    public static final int REGISTRATIONID = AttributesEnum.RegistrationId.index();
    public static final int DESCR = AttributesEnum.Descr.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int UNITPRICE = AttributesEnum.UnitPrice.index();
    public static final int CURRENCY = AttributesEnum.Currency.index();
    public static final int MANUFACTURER = AttributesEnum.Manufacturer.index();
    public static final int REGNUM = AttributesEnum.RegNum.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ItemDetailsVORowImpl() {
    }

    /**
     * Gets RegistrationLinesEO entity object.
     * @return the RegistrationLinesEO
     */
    public RegistrationLinesEOImpl getRegistrationLinesEO() {
        return (RegistrationLinesEOImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for LINE_ID using the alias name LineId.
     * @return the LINE_ID
     */
    public Number getLineId() {
        return (Number) getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for LINE_ID using the alias name LineId.
     * @param value value to set the LINE_ID
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for PRODUCT_CODE using the alias name ProductCode.
     * @return the PRODUCT_CODE
     */
    public String getProductCode() {
        return (String) getAttributeInternal(PRODUCTCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_CODE using the alias name ProductCode.
     * @param value value to set the PRODUCT_CODE
     */
    public void setProductCode(String value) {
        setAttributeInternal(PRODUCTCODE, value);
    }

    /**
     * Gets the attribute value for QTY using the alias name Qty.
     * @return the QTY
     */
    public Number getQty() {
        return (Number) getAttributeInternal(QTY);
    }

    /**
     * Sets <code>value</code> as attribute value for QTY using the alias name Qty.
     * @param value value to set the QTY
     */
    public void setQty(Number value) {
        setAttributeInternal(QTY, value);
    }

    /**
     * Gets the attribute value for REGISTRATION_ID using the alias name RegistrationId.
     * @return the REGISTRATION_ID
     */
    public Number getRegistrationId() {
        return (Number) getAttributeInternal(REGISTRATIONID);
    }

    /**
     * Sets <code>value</code> as attribute value for REGISTRATION_ID using the alias name RegistrationId.
     * @param value value to set the REGISTRATION_ID
     */
    public void setRegistrationId(Number value) {
        setAttributeInternal(REGISTRATIONID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Descr.
     * @return the Descr
     */
    public String getDescr() {
        return (String) getAttributeInternal(DESCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Descr.
     * @param value value to set the  Descr
     */
    public void setDescr(String value) {
        setAttributeInternal(DESCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Uom.
     * @return the Uom
     */
    public String getUom() {
        return (String) getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Uom.
     * @param value value to set the  Uom
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UnitPrice.
     * @return the UnitPrice
     */
    public Number getUnitPrice() {
        return (Number) getAttributeInternal(UNITPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UnitPrice.
     * @param value value to set the  UnitPrice
     */
    public void setUnitPrice(Number value) {
        setAttributeInternal(UNITPRICE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Currency.
     * @return the Currency
     */
    public String getCurrency() {
        return (String) getAttributeInternal(CURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Currency.
     * @param value value to set the  Currency
     */
    public void setCurrency(String value) {
        setAttributeInternal(CURRENCY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Manufacturer.
     * @return the Manufacturer
     */
    public String getManufacturer() {
        return (String) getAttributeInternal(MANUFACTURER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Manufacturer.
     * @param value value to set the  Manufacturer
     */
    public void setManufacturer(String value) {
        setAttributeInternal(MANUFACTURER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RegNum.
     * @return the RegNum
     */
    public String getRegNum() {
        return (String) getAttributeInternal(REGNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RegNum.
     * @param value value to set the  RegNum
     */
    public void setRegNum(String value) {
        setAttributeInternal(REGNUM, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * Sample exportable method.
     */
    public void sampleItemDetailsVORowImplExportable() {
    }

    /**
     * Sample exportable method.
     */
    public void sampleItemDetailsVORowImplExportable2(String testParam1) {
    }
}
